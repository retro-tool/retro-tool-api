version: 2.1

orbs:
  slack: circleci/slack@3.4.2

workflows:
  version: 2

  test-and-build:
    jobs:
      - test
      - build:
          context: docker-login
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - notify_build:
          requires:
            - build

jobs:
  test:
    parallelism: 1
    docker:
      - image: circleci/elixir:1.10
        environment:
          MIX_ENV: test
          DB_HOST: localhost
          DB_USER: postgres
          DB:PASSWORD: postgres
          DB_NAME: xrt_test
      - image: circleci/postgres:12-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: xrt_test
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependency-cache-{{ checksum "mix.lock" }}
            - v1-dependency-cache
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run: mix deps.get
      - run: mix compile --warnings-as-errors
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: mix ecto.migrate
      - run: mix credo
      - run:
          command: MIX_ENV=dev mix dialyzer
          no_output_timeout: 20m
      - run: mix test
      - save_cache:
          key: v1-dependency-cache-{{ checksum "mix.lock" }}
          paths:
            - _build
            - deps
            - ~/.mix
  build:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: /app
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t retrotool/api:$CIRCLE_SHA1 -t retrotool/api:latest .
      - run:
          name: Login to DockerHub
          command: docker login -u="$DOCKER_USER" -p="$DOCKER_PASSWORD"
      - run:
          name: Push commit image to DockerHub
          command: docker push retrotool/api:$CIRCLE_SHA1
      - run:
          name: Push latest image to DockerHub
          command: docker push retrotool/api:latest
  notify_build:
    docker:
      - image: circleci/node:latest
    steps:
      - slack/notify:
          message: ":rocket: Docker image built -> retrotool/api:latest"
